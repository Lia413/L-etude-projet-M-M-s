from os import listdir, mkdir
import cv2
import numpy as np

# A CHANGER PEUT ETRE :
# nom_du_dossier_ou_vous_avez_vos_photos (il faut que ce dossier soit au meme endroit que le code)
dossier = "Photos"

# on crée un nouveau dossier
mkdir("nouvelles_images")

# on crée les listes
nb_bleu = []
nb_jaune = []
nb_marron = []
nb_orange = []
nb_rouge = []
nb_vert = []

# liste des images du dossier
images = listdir(dossier)


def filtre(image, bande_basse, bande_haute):
    lower_bound = np.array(bande_basse)
    upper_bound = np.array(bande_haute)
    new = cv2.inRange(image, lower_bound, upper_bound)
    return new


# def resolution(image, taille):
#     r = taille / image.shape[0]
#     dim = (int(image.shape[1] * r), taille)
#     resized = cv2.resize(image, dim, interpolation=cv2.INTER_AREA)
#     # cv2.imshow("Resized (Height)", resized)
#     # cv2.waitKey(0)
#     return resized


def homogeneite(photo):
    kernel = np.ones((3, 3), np.uint8)
    new = cv2.erode(photo, kernel, iterations=3)
    new = cv2.dilate(new, kernel, iterations=17)
    new = cv2.erode(new, kernel, iterations=4)
    return new


def connect_component(photo):
    output = np.array(photo)
    photo = cv2.threshold(photo, 127, 255, cv2.THRESH_BINARY)[1]
    # img2 = photo[:, :, 0]
    num_labels, labels = cv2.connectedComponents(photo)
    # print(labels.shape)
    return num_labels - 1


for i in images:
    nom = dossier + "/" + i
    im = cv2.imread(nom)

    # FILTRES
    bleu = filtre(im, [120, 70, 0], [255, 95, 20])
    jaune = filtre(im, [0, 160, 190], [50, 210, 240])
    marron = filtre(im, [15, 30, 60], [50, 65, 100])
    orange = filtre(im, [35, 115, 220], [50, 140, 255])
    rouge = filtre(im, [50, 50, 140], [70, 80, 255])
    vert = filtre(im, [10, 90, 30], [90, 255, 80])
    # resolution
    # bleu = resolution(bleu, 150)
    # jaune = resolution(jaune, 150)
    # marron = resolution(marron, 150)
    # orange = resolution(orange, 150)
    # rouge = resolution(rouge, 150)
    # vert = resolution(vert, 150)
    # HOMOGENEITE
    bleu = homogeneite(bleu)
    jaune = homogeneite(jaune)
    marron = homogeneite(marron)
    orange = homogeneite(orange)
    rouge = homogeneite(rouge)
    vert = homogeneite(vert)

    # METS LES NOUVELLES IMAGES DANS UN NOUVEAU DOSSIER POUR POUVOIR AJUSTER HOMOGENEITE
    nom = "nouvelles_images/bleu" + i + ".png"
    cv2.imwrite(nom, bleu)
    nom = "nouvelles_images/jaune" + i + ".png"
    cv2.imwrite(nom, jaune)
    nom = "nouvelles_images/marron" + i + ".png"
    cv2.imwrite(nom, marron)
    nom = "nouvelles_images/orange" + i + ".png"
    cv2.imwrite(nom, orange)
    nom = "nouvelles_images/rouge" + i + ".png"
    cv2.imwrite(nom, rouge)
    nom = "nouvelles_images/vert" + i + ".png"
    cv2.imwrite(nom, vert)

    # CONNECT COMPONENT
    nb_bleu += [connect_component(bleu)]
    nb_jaune += [connect_component(jaune)]
    nb_marron += [connect_component(marron)]
    nb_orange += [connect_component(orange)]
    nb_rouge += [connect_component(rouge)]
    nb_vert += [connect_component(vert)]


# CALCUL DE PROPORTIONS ET TOUT ET TOUT
tot_bleu = 0
tot_jaune = 0
tot_marron = 0
tot_orange = 0
tot_rouge = 0
tot_vert = 0
for i in nb_bleu:
    tot_bleu += i
for i in nb_jaune:
    tot_jaune += i
for i in nb_marron:
    tot_marron += i
for i in nb_orange:
    tot_orange += i
for i in nb_rouge:
    tot_rouge += i
for i in nb_vert:
    tot_vert += i

TOT = tot_bleu + tot_jaune + tot_marron + tot_orange + tot_rouge + tot_vert
p_bleu = tot_bleu / TOT
p_jaune = tot_jaune / TOT
p_marron = tot_marron / TOT
p_orange = tot_orange / TOT
p_rouge = tot_rouge / TOT
p_vert = tot_vert / TOT

print("proportion de bleus", p_bleu)
print("proportion de jaunes", p_jaune)
print("proportion de marrons", p_marron)
print("proportion de oranges", p_orange)
print("proportion de rouges", p_rouge)
print("proportion de verts", p_vert)


